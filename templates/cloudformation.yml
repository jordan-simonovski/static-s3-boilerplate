AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  AppName:
    Type: String
    Description: The name of the site you're deploying
  HostedZoneName:
    Type: String
    Description: An existing hosted zone that you currently have in Route 53 (e.g. myawesomesite.com.)
  BucketName:
    Type: String
    Description: A unique bucket name to deploy your static content to. Cannot contain uppercase characters.
  SubDomain:
    Type: String
    Description: The Subdomain belonging to the hosted zone. This will resolve to <subdomain>.myawesomesite.com depending on the
  ACMCertificateId:
    Type: String
    Description: The id of your certificate in ACM. Must be us-east-1 to work with CloudFront.
  Environment:
    Type: String
    Default: stage
    AllowedValues:
      - stage
      - prod

Conditions:
  IsProduction:
    !Equals [ !Ref Environment, prod]

Resources:
  AccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub '${Environment}-${AppName}'
  SiteBucket:
    DependsOn:
      - AccessIdentity
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${Environment}-${BucketName}"
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - !If [IsProduction, !Sub "${SubDomain}.${HostedZoneName}", !Sub "${Environment}-${SubDomain}.${HostedZoneName}"]
            AllowedMethods:
              - GET
            MaxAge: 3000
  BucketPolicy:
    DependsOn:
      - AccessIdentity
      - SiteBucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SiteBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:getObject
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt AccessIdentity.S3CanonicalUserId
            Resource: !Sub "arn:aws:s3:::${Environment}-${BucketName}/*"
  SiteCloudFront:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - AccessIdentity
      - BucketPolicy
    Properties:
      DistributionConfig:
        Comment: !Sub "CF Distribution for ${AppName}"
        ViewerCertificate:
          AcmCertificateArn: !Sub "arn:aws:acm:us-east-1:${AWS::AccountId}:certificate/${ACMCertificateId}"
          SslSupportMethod: sni-only
        Origins:
        - DomainName: !GetAtt SiteBucket.DomainName
          Id: S3Origin
          S3OriginConfig:
            OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${AccessIdentity}"
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: index.html
        Aliases:
          - !If [IsProduction, !Sub "${SubDomain}.${HostedZoneName}", !Sub "${Environment}-${SubDomain}.${HostedZoneName}"]
        CustomErrorResponses:
        - ErrorCachingMinTTL: 0
          ErrorCode: 404
          ResponseCode: 200
          ResponsePagePath: /index.html
        - ErrorCachingMinTTL: 0
          ErrorCode: 403
          ResponseCode: 200
          ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
  AppDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: CNAME
      TTL: 300
      ResourceRecords:
        - !GetAtt SiteCloudFront.DomainName
      HostedZoneName: !Sub "${HostedZoneName}."
      Name: !If [IsProduction, !Sub "${SubDomain}.${HostedZoneName}.", !Sub "${Environment}-${SubDomain}.${HostedZoneName}."]

Outputs:
  BucketName:
    Description: The bucket to reference when making a deployment
    Value: !Sub "${Environment}-${BucketName}"
  DistributionID:
    Description: The Distribution ID you want to reference when purging cache
    Value: !Ref SiteCloudFront
  AppURL:
    Description: The URL to access the app
    Value: !Join ["",["https://", !Ref AppDNSRecord]]